@model IEnumerable<ABCRetails.Models.Order>
@inject ABCRetails.Services.IAzureStorageService StorageService

@{
    ViewData["Title"] = "Orders";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="display-6 text-primary">
        <i class="fas fa-shopping-cart me-2"></i>@ViewData["Title"]
    </h1>
    <a asp-action="Create" class="btn btn-primary">
        <i class="fas fa-plus-circle me-2"></i>Create New Order
    </a>
</div>

<div class="card shadow-sm">
    <div class="card-header bg-light">
        <h5 class="card-title mb-0">
            <i class="fas fa-list me-2"></i>Order List
            <span class="badge bg-secondary ms-2">@Model.Count()</span>
        </h5>
    </div>
    <div class="card-body p-0">
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-dark">
                        <tr>
                            <th>Image</th>
                            <th>Order ID</th>
                            <th>Customer</th>
                            <th>Product</th>
                            <th>Quantity</th>
                            <th>Total Price</th>
                            <th>Order Date</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            // Get product image for each order
                            string productImageUrl = string.Empty;
                            var product = await StorageService.GetEntityAsync<Product>("Product", item.ProductId);
                            if (product != null)
                            {
                                productImageUrl = product.ImageUrl;
                            }

                            <tr>
                                <td>
                                    @if (!string.IsNullOrEmpty(productImageUrl))
                                    {
                                        <img src="@productImageUrl" alt="Product Image"
                                             class="img-thumbnail"
                                             style="max-height: 50px; max-width: 50px;" />
                                    }
                                    else
                                    {
                                        <span class="text-muted">No Image</span>
                                    }
                                </td>
                                <td>
                                    <span class="badge bg-info">@item.OrderId</span>
                                </td>
                                <td>
                                    <strong>@item.Username</strong>
                                    <br />
                                    <small class="text-muted">ID: @item.CustomerId</small>
                                </td>
                                <td>
                                    <strong>@item.ProductName</strong>
                                    <br />
                                    <small class="text-muted">ID: @item.ProductId</small>
                                </td>
                                <td>
                                    <span class="badge bg-primary">@item.Quantity</span>
                                </td>
                                <td>
                                    <span class="fw-bold text-success">@item.TotalPrice.ToString("C")</span>
                                    <br />
                                    <small class="text-muted">@item.UnitPrice.ToString("C") each</small>
                                </td>
                                <td>
                                    <span class="text-muted">@item.OrderDate.ToString("MMM dd, yyyy")</span>
                                </td>
                                <td>
                                    @{
                                        var statusClass = item.Status switch
                                        {
                                            "Submitted" => "bg-info",
                                            "Processing" => "bg-warning",
                                            "Completed" => "bg-success",
                                            "Cancelled" => "bg-danger",
                                            _ => "bg-secondary"
                                        };
                                    }
                                    <span class="badge @statusClass">@item.Status</span>
                                </td>
                                <td>
                                    <div class="btn-group btn-group-sm" role="group">
                                        <a asp-action="Details" asp-route-id="@item.RowKey"
                                           class="btn btn-outline-info" title="Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@item.RowKey"
                                           class="btn btn-outline-primary" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <form asp-action="Delete" method="post" class="d-inline">
                                            <input type="hidden" name="id" value="@item.RowKey" />
                                            <button type="submit" class="btn btn-outline-danger"
                                                    title="Delete"
                                                    onclick="return confirm('Are you sure you want to delete this order?')">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-shopping-cart fa-4x text-muted mb-3"></i>
                <h4 class="text-muted">No Orders Found</h4>
                <p class="text-muted">Get started by creating your first order.</p>
                <a asp-action="Create" class="btn btn-primary mt-2">
                    <i class="fas fa-plus-circle me-2"></i>Create Order
                </a>
            </div>
        }
    </div>

    @if (Model.Any())
    {
        <div class="card-footer bg-light">
            <div class="row">
                <div class="col-md-6">
                    <small class="text-muted">
                        Showing @Model.Count() order(s) • Total Value: @Model.Sum(o => o.TotalPrice).ToString("C")
                    </small>
                </div>
                <div class="col-md-6 text-end">
                    <small class="text-muted">
                        Last updated: @DateTime.Now.ToString("MMM dd, yyyy hh:mm tt")
                    </small>
                </div>
            </div>
        </div>
    }
</div>

@section Styles {
    <style>
        .table th {
            border-top: none;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.85rem;
            letter-spacing: 0.5px;
        }

        .table td {
            vertical-align: middle;
        }

        .btn-group .btn {
            border-radius: 0.375rem;
            margin: 0 2px;
        }

        .card {
            border: none;
            border-radius: 1rem;
        }

        .table-hover tbody tr:hover {
            background-color: rgba(0, 123, 255, 0.05);
            transform: translateY(-1px);
            transition: all 0.2s ease;
        }

        .badge {
            font-size: 0.75em;
            padding: 0.5em 0.75em;
        }
    </style>
}
